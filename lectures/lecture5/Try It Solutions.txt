#calculator.py
def addition(num1, num2):
    return num1 + num2

def subtraction(num1, num2):
    return num1 - num2

def multiplication(num1, num2):
    return num1 * num2

def division(num1, num2):
    if num2 == 0:
        raise ValueError('Divide by zero')
    return num1 / num2
	

#In Notebook
import unittest
import calculator as cal
class TestCalc(unittest.TestCase):
    def test_addition(self):
        self.assertEqual(cal.addition(10, 10), 20)
        self.assertEqual(cal.addition(-10, 10), 0)
        self.assertEqual(cal.addition(10, -10), 0)
        self.assertEqual(cal.addition(-10, -10), -20)
    
    def test_subtraction(self):
        self.assertEqual(cal.subtraction(10, 10), 0)
        self.assertEqual(cal.subtraction(-10, 10), -20)
        self.assertEqual(cal.subtraction(-10, -10), 0)
        self.assertEqual(cal.subtraction(10, -10), 20)
    
    def test_multiplication(self):
        self.assertEqual(cal.multiplication(10, 10), 100)
        self.assertEqual(cal.multiplication(-10, 10), -100)
        self.assertEqual(cal.multiplication(10, -10), -100)
        self.assertEqual(cal.multiplication(-10, -10), 100)
        
    def test_division(self):
        self.assertEqual(cal.division(10, 2), 5)
        self.assertEqual(cal.division(2, 10), 0.2)
        self.assertEqual(cal.division(-10, -2), 5)
        self.assertEqual(cal.division(10, -2), -5)
        self.assertEqual(cal.division(-10, 2), -5)
        with self.assertRaises(ValueError):
            cal.division(10, 0)

unittest.main(argv=[''], verbosity=2, exit=False)




# anagram.py
def check_anagram(first_word, second_word):
    return sorted(first_word) == sorted(second_word)
	
#In Notebook
import unittest
from anagram import check_anagram

class TestAnagram(unittest.TestCase):
    def setUp(self): 
        print('Set Up')
        
    def tearDown(self):
        print('Tear Down')

    def test_anagram(self):
        self.assertTrue(check_anagram("silent", "listen"))
        self.assertFalse(check_anagram("COSC", "CSOS"))
        
unittest.main(argv=[''], verbosity=2, exit=False)  